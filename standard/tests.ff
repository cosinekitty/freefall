// tests.ff - Unit tests for Freefall interpreter.

var a, b, c, d: complex;
var x, y, z: real distance;
var u, v, w: real;

// Simplifier and identity tests.
asserti(0, simp(c-c));
asserti(x+y, y+x);
asserti(x*y, y*x);
asserti(x*(x+y) + z*mile*c, c*z*mile + (y+x)*x);
asserti(eval(12*inch), eval(foot));
asserti(deriv(exp(a*a),a), 2*a*exp(a^2));
asserti(deriv(exp(a^2),a), 2*a*exp(a^2));
asserti(diff(ln(a),a), @a/a);
asserti(deriv(ln(exp(z)),z), 1);
asserti(simp(ln(exp(a))), ln(exp(a)));
asserti(simp(ln(exp(v))), v);
asserti(simp(-a*-a*-b*-a),a^3*b);
asserti(simp((x+y+z)^0), 1);
asserti(simp((x+y+z)^1), x+y+z);
asserti(simp((x+y)-y), x);
asserti(simp((3+4)^2), 49);
asserti(simp(pow(-3,7)), -2187);
asserti(deriv(asin(z) + acos(z), z), 0);
asserti(deriv(asin(a), a), deriv(-acos(a), a));

// Expression formatter tests.
assertf("123", simp(122+1));
assertf("3+4", sum(3,4));
assertf("3+4", 3+4);
assertf("3-4", sum(3,-4));
assertf("3-4", 3-4);
assertf("(a+b)*(c-d)/(x+y)", (a+b)*(c-d)/(x+y));
assertf("3/4", 3/4);
assertf("sqrt(a*b)", sqrt(a*b));
assertf("sqrt(a*b)", pow(prod(a,b),1/2));

// Numeric evaluation tests.
assertf("16.0", eval(2.0^4.0));
assertf("0.0625", eval(2.0^(-4.0)));
assertf("1267650600228229401496703205376", eval(2^100));
assertf("1.26765060022823e+30", eval(2.0^100));
